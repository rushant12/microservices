package com.example.demo.service;

import com.azure.storage.blob.*;
import com.azure.storage.blob.models.BlobClient;
import com.azure.storage.blob.models.BlobContainerClient;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import java.io.File;

@Service
public class BlobStorageService {

    private static final Logger logger = LoggerFactory.getLogger(BlobStorageService.class);

    @Value("${accountName}")
    private String accountName;

    @Value("${accountKey}")
    private String accountKey;

    @Value("${containerName}")
    private String containerName;

    public String uploadFile(String filePath, String batchId) throws Exception {
        logger.info("Uploading file with batchId={} to Azure Blob Storage", batchId);

        String connectionString = String.format(
                "DefaultEndpointsProtocol=https;AccountName=%s;AccountKey=%s;EndpointSuffix=core.windows.net",
                accountName, accountKey
        );

        BlobServiceClient blobServiceClient = new BlobServiceClientBuilder()
                .connectionString(connectionString)
                .buildClient();

        BlobContainerClient containerClient = blobServiceClient.getBlobContainerClient(containerName);
        if (!containerClient.exists()) {
            containerClient.create();
        }

        File file = new File(filePath);
        String blobName = batchId + "/" + file.getName();

        BlobClient blobClient = containerClient.getBlobClient(blobName);
        blobClient.uploadFromFile(file.getAbsolutePath(), true);

        String url = blobClient.getBlobUrl();
        logger.info("Successfully uploaded to: {}", url);

        return url;
    }
}
