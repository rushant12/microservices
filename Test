C:\Users\CC437236\jdk-17.0.12_windows-x64_bin\jdk-17.0.12\bin\java.exe "-javaagent:C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 2024.2.3\lib\idea_rt.jar=58351:C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 2024.2.3\bin" -Dfile.encoding=UTF-8 -classpath C:\Users\CC437236\Documents\file-manager\target\classes;C:\Users\CC437236\.m2\repository\za\co\nedbank\spring-nedbank-kafka-sb3\1.0.0-RELEASE\spring-nedbank-kafka-sb3-1.0.0-RELEASE.jar;C:\Users\CC437236\.m2\repository\org\springframework\kafka\spring-kafka\3.0.11\spring-kafka-3.0.11.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-context\6.0.2\spring-context-6.0.2.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-expression\6.0.2\spring-expression-6.0.2.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-messaging\6.0.2\spring-messaging-6.0.2.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-tx\6.0.2\spring-tx-6.0.2.jar;C:\Users\CC437236\.m2\repository\org\springframework\retry\spring-retry\2.0.0\spring-retry-2.0.0.jar;C:\Users\CC437236\.m2\repository\org\apache\kafka\kafka-clients\3.3.1\kafka-clients-3.3.1.jar;C:\Users\CC437236\.m2\repository\com\github\luben\zstd-jni\1.5.2-1\zstd-jni-1.5.2-1.jar;C:\Users\CC437236\.m2\repository\org\lz4\lz4-java\1.8.0\lz4-java-1.8.0.jar;C:\Users\CC437236\.m2\repository\org\xerial\snappy\snappy-java\1.1.8.4\snappy-java-1.1.8.4.jar;C:\Users\CC437236\.m2\repository\io\micrometer\micrometer-observation\1.10.2\micrometer-observation-1.10.2.jar;C:\Users\CC437236\.m2\repository\io\micrometer\micrometer-commons\1.10.2\micrometer-commons-1.10.2.jar;C:\Users\CC437236\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\CC437236\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.0\spring-boot-starter-web-3.0.0.jar;C:\Users\CC437236\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.0\spring-boot-starter-3.0.0.jar;C:\Users\CC437236\.m2\repository\org\springframework\boot\spring-boot\3.0.0\spring-boot-3.0.0.jar;C:\Users\CC437236\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.0\spring-boot-autoconfigure-3.0.0.jar;C:\Users\CC437236\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.0\spring-boot-starter-logging-3.0.0.jar;C:\Users\CC437236\.m2\repository\ch\qos\logback\logback-classic\1.4.5\logback-classic-1.4.5.jar;C:\Users\CC437236\.m2\repository\ch\qos\logback\logback-core\1.4.5\logback-core-1.4.5.jar;C:\Users\CC437236\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\CC437236\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\CC437236\.m2\repository\org\slf4j\jul-to-slf4j\2.0.4\jul-to-slf4j-2.0.4.jar;C:\Users\CC437236\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\CC437236\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\CC437236\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.0\spring-boot-starter-json-3.0.0.jar;C:\Users\CC437236\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.1\jackson-datatype-jdk8-2.14.1.jar;C:\Users\CC437236\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.1\jackson-module-parameter-names-2.14.1.jar;C:\Users\CC437236\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.0\spring-boot-starter-tomcat-3.0.0.jar;C:\Users\CC437236\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.1\tomcat-embed-core-10.1.1.jar;C:\Users\CC437236\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.1\tomcat-embed-el-10.1.1.jar;C:\Users\CC437236\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.1\tomcat-embed-websocket-10.1.1.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-web\6.0.2\spring-web-6.0.2.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-webmvc\6.0.2\spring-webmvc-6.0.2.jar;C:\Users\CC437236\.m2\repository\org\springframework\boot\spring-boot-starter-integration\3.0.0\spring-boot-starter-integration-3.0.0.jar;C:\Users\CC437236\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.0\spring-boot-starter-aop-3.0.0.jar;C:\Users\CC437236\.m2\repository\org\aspectj\aspectjweaver\1.9.9.1\aspectjweaver-1.9.9.1.jar;C:\Users\CC437236\.m2\repository\org\springframework\integration\spring-integration-core\6.0.0\spring-integration-core-6.0.0.jar;C:\Users\CC437236\.m2\repository\org\springframework\batch\spring-batch-core\5.0.0\spring-batch-core-5.0.0.jar;C:\Users\CC437236\.m2\repository\org\springframework\batch\spring-batch-infrastructure\5.0.0\spring-batch-infrastructure-5.0.0.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-aop\6.0.2\spring-aop-6.0.2.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-beans\6.0.2\spring-beans-6.0.2.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-jdbc\6.0.2\spring-jdbc-6.0.2.jar;C:\Users\CC437236\.m2\repository\io\micrometer\micrometer-core\1.10.2\micrometer-core-1.10.2.jar;C:\Users\CC437236\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar;C:\Users\CC437236\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\CC437236\.m2\repository\org\springframework\ws\spring-ws-core\4.0.0\spring-ws-core-4.0.0.jar;C:\Users\CC437236\.m2\repository\org\springframework\ws\spring-xml\4.0.0\spring-xml-4.0.0.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-oxm\6.0.2\spring-oxm-6.0.2.jar;C:\Users\CC437236\.m2\repository\jakarta\xml\soap\jakarta.xml.soap-api\3.0.0\jakarta.xml.soap-api-3.0.0.jar;C:\Users\CC437236\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\CC437236\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\CC437236\.m2\repository\com\sun\xml\bind\jaxb-impl\4.0.1\jaxb-impl-4.0.1.jar;C:\Users\CC437236\.m2\repository\com\sun\xml\bind\jaxb-core\4.0.1\jaxb-core-4.0.1.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-core\6.0.2\spring-core-6.0.2.jar;C:\Users\CC437236\.m2\repository\org\springframework\spring-jcl\6.0.2\spring-jcl-6.0.2.jar;C:\Users\CC437236\.m2\repository\com\sun\xml\messaging\saaj\saaj-impl\3.0.0\saaj-impl-3.0.0.jar;C:\Users\CC437236\.m2\repository\org\eclipse\angus\angus-activation\1.0.0\angus-activation-1.0.0.jar;C:\Users\CC437236\.m2\repository\org\jvnet\staxex\stax-ex\2.1.0\stax-ex-2.1.0.jar;C:\Users\CC437236\.m2\repository\com\azure\azure-storage-blob\12.10.0\azure-storage-blob-12.10.0.jar;C:\Users\CC437236\.m2\repository\com\azure\azure-storage-common\12.10.0\azure-storage-common-12.10.0.jar;C:\Users\CC437236\.m2\repository\com\azure\azure-storage-internal-avro\12.0.2\azure-storage-internal-avro-12.0.2.jar;C:\Users\CC437236\.m2\repository\com\azure\azure-core\1.14.0\azure-core-1.14.0.jar;C:\Users\CC437236\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\CC437236\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.1\jackson-core-2.14.1.jar;C:\Users\CC437236\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.1\jackson-datatype-jsr310-2.14.1.jar;C:\Users\CC437236\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.14.1\jackson-dataformat-xml-2.14.1.jar;C:\Users\CC437236\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\CC437236\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.4.0\woodstox-core-6.4.0.jar;C:\Users\CC437236\.m2\repository\org\slf4j\slf4j-api\2.0.4\slf4j-api-2.0.4.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.54.Final\netty-tcnative-boringssl-static-2.0.54.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-tcnative-classes\2.0.54.Final\netty-tcnative-classes-2.0.54.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.54.Final\netty-tcnative-boringssl-static-2.0.54.Final-linux-x86_64.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.54.Final\netty-tcnative-boringssl-static-2.0.54.Final-linux-aarch_64.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.54.Final\netty-tcnative-boringssl-static-2.0.54.Final-osx-x86_64.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.54.Final\netty-tcnative-boringssl-static-2.0.54.Final-osx-aarch_64.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-tcnative-boringssl-static\2.0.54.Final\netty-tcnative-boringssl-static-2.0.54.Final-windows-x86_64.jar;C:\Users\CC437236\.m2\repository\com\azure\azure-security-keyvault-secrets\4.2.3\azure-security-keyvault-secrets-4.2.3.jar;C:\Users\CC437236\.m2\repository\com\azure\azure-core-http-netty\1.6.3\azure-core-http-netty-1.6.3.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-handler\4.1.85.Final\netty-handler-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-common\4.1.85.Final\netty-common-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-resolver\4.1.85.Final\netty-resolver-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-transport\4.1.85.Final\netty-transport-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-codec\4.1.85.Final\netty-codec-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-handler-proxy\4.1.85.Final\netty-handler-proxy-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-codec-socks\4.1.85.Final\netty-codec-socks-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-buffer\4.1.85.Final\netty-buffer-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-codec-http\4.1.85.Final\netty-codec-http-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-codec-http2\4.1.85.Final\netty-codec-http2-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.85.Final\netty-transport-native-unix-common-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-transport-native-epoll\4.1.85.Final\netty-transport-native-epoll-4.1.85.Final-linux-x86_64.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.85.Final\netty-transport-classes-epoll-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.85.Final\netty-transport-native-kqueue-4.1.85.Final-osx-x86_64.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-transport-classes-kqueue\4.1.85.Final\netty-transport-classes-kqueue-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\projectreactor\netty\reactor-netty\1.1.0\reactor-netty-1.1.0.jar;C:\Users\CC437236\.m2\repository\io\projectreactor\netty\reactor-netty-core\1.1.0\reactor-netty-core-1.1.0.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-resolver-dns\4.1.85.Final\netty-resolver-dns-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-codec-dns\4.1.85.Final\netty-codec-dns-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.85.Final\netty-resolver-dns-native-macos-4.1.85.Final-osx-x86_64.jar;C:\Users\CC437236\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.85.Final\netty-resolver-dns-classes-macos-4.1.85.Final.jar;C:\Users\CC437236\.m2\repository\io\projectreactor\netty\reactor-netty-http\1.1.0\reactor-netty-http-1.1.0.jar;C:\Users\CC437236\.m2\repository\io\projectreactor\netty\incubator\reactor-netty-incubator-quic\0.1.0\reactor-netty-incubator-quic-0.1.0.jar;C:\Users\CC437236\.m2\repository\io\netty\incubator\netty-incubator-codec-native-quic\0.0.33.Final\netty-incubator-codec-native-quic-0.0.33.Final-linux-x86_64.jar;C:\Users\CC437236\.m2\repository\io\netty\incubator\netty-incubator-codec-classes-quic\0.0.33.Final\netty-incubator-codec-classes-quic-0.0.33.Final.jar;C:\Users\CC437236\.m2\repository\com\azure\azure-identity\1.2.5\azure-identity-1.2.5.jar;C:\Users\CC437236\.m2\repository\net\minidev\json-smart\2.4.8\json-smart-2.4.8.jar;C:\Users\CC437236\.m2\repository\net\minidev\accessors-smart\2.4.8\accessors-smart-2.4.8.jar;C:\Users\CC437236\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\CC437236\.m2\repository\com\microsoft\azure\msal4j\1.9.1\msal4j-1.9.1.jar;C:\Users\CC437236\.m2\repository\com\microsoft\azure\msal4j-persistence-extension\1.1.0\msal4j-persistence-extension-1.1.0.jar;C:\Users\CC437236\.m2\repository\net\java\dev\jna\jna\5.5.0\jna-5.5.0.jar;C:\Users\CC437236\.m2\repository\com\nimbusds\oauth2-oidc-sdk\8.36\oauth2-oidc-sdk-8.36.jar;C:\Users\CC437236\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\CC437236\.m2\repository\com\nimbusds\content-type\2.1\content-type-2.1.jar;C:\Users\CC437236\.m2\repository\com\nimbusds\lang-tag\1.4.4\lang-tag-1.4.4.jar;C:\Users\CC437236\.m2\repository\com\nimbusds\nimbus-jose-jwt\8.20.1\nimbus-jose-jwt-8.20.1.jar;C:\Users\CC437236\.m2\repository\net\java\dev\jna\jna-platform\5.6.0\jna-platform-5.6.0.jar;C:\Users\CC437236\.m2\repository\org\linguafranca\pwdb\KeePassJava2\2.1.4\KeePassJava2-2.1.4.jar;C:\Users\CC437236\.m2\repository\org\linguafranca\pwdb\KeePassJava2-kdb\2.1.4\KeePassJava2-kdb-2.1.4.jar;C:\Users\CC437236\.m2\repository\org\linguafranca\pwdb\database\2.1.4\database-2.1.4.jar;C:\Users\CC437236\.m2\repository\com\google\guava\guava\19.0\guava-19.0.jar;C:\Users\CC437236\.m2\repository\com\madgag\spongycastle\core\1.54.0.0\core-1.54.0.0.jar;C:\Users\CC437236\.m2\repository\org\jetbrains\annotations\15.0\annotations-15.0.jar;C:\Users\CC437236\.m2\repository\org\linguafranca\pwdb\KeePassJava2-dom\2.1.4\KeePassJava2-dom-2.1.4.jar;C:\Users\CC437236\.m2\repository\org\linguafranca\pwdb\KeePassJava2-kdbx\2.1.4\KeePassJava2-kdbx-2.1.4.jar;C:\Users\CC437236\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\CC437236\.m2\repository\org\linguafranca\pwdb\KeePassJava2-jaxb\2.1.4\KeePassJava2-jaxb-2.1.4.jar;C:\Users\CC437236\.m2\repository\org\linguafranca\pwdb\KeePassJava2-simple\2.1.4\KeePassJava2-simple-2.1.4.jar;C:\Users\CC437236\.m2\repository\org\simpleframework\simple-xml\2.7.1\simple-xml-2.7.1.jar;C:\Users\CC437236\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\CC437236\.m2\repository\stax\stax\1.2.0\stax-1.2.0.jar;C:\Users\CC437236\.m2\repository\xpp3\xpp3\1.1.3.3\xpp3-1.1.3.3.jar;C:\Users\CC437236\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\CC437236\.m2\repository\com\fasterxml\aalto-xml\1.0.0\aalto-xml-1.0.0.jar;C:\Users\CC437236\.m2\repository\io\projectreactor\reactor-core\3.5.0\reactor-core-3.5.0.jar;C:\Users\CC437236\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\CC437236\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.1\jackson-databind-2.14.1.jar com.nedbank.kafka.filemanage.service.BlobStorageFromKeyVault
09:46:41.038 [main] DEBUG com.azure.identity.EnvironmentCredential - Azure Identity => Found the following environment variables: 
09:46:41.043 [main] ERROR com.azure.identity.EnvironmentCredential - Azure Identity => ERROR in EnvironmentCredential: Missing required environment variable AZURE_CLIENT_ID
09:46:41.749 [main] DEBUG reactor.util.Loggers - Using Slf4j logging framework
09:46:41.772 [main] DEBUG com.azure.identity.ManagedIdentityCredential - Azure Identity => Found the following environment variables: 
09:46:41.773 [main] DEBUG com.azure.identity.SharedTokenCacheCredential - Azure Identity => Found the following environment variables: 
09:46:41.777 [main] ERROR com.azure.identity.implementation.IntelliJCacheAccessor - IntelliJ Authentication not available. Please log in with Azure Tools for IntelliJ plugin in the IDE.
com.azure.identity.CredentialUnavailableException: IntelliJ Authentication not available. Please log in with Azure Tools for IntelliJ plugin in the IDE.
	at com.azure.identity.implementation.IntelliJCacheAccessor.getAuthDetailsIfAvailable(IntelliJCacheAccessor.java:243)
	at com.azure.identity.IntelliJCredential.<init>(IntelliJCredential.java:51)
	at com.azure.identity.DefaultAzureCredentialBuilder.getCredentialsChain(DefaultAzureCredentialBuilder.java:132)
	at com.azure.identity.DefaultAzureCredentialBuilder.build(DefaultAzureCredentialBuilder.java:123)
	at com.nedbank.kafka.filemanage.service.BlobStorageFromKeyVault.main(BlobStorageFromKeyVault.java:20)
09:46:41.895 [main] DEBUG io.netty.util.internal.logging.InternalLoggerFactory - Using SLF4J as the default logging framework
09:46:41.898 [main] DEBUG io.netty.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false
09:46:41.898 [main] DEBUG io.netty.util.internal.PlatformDependent0 - Java version: 17
09:46:41.901 [main] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
09:46:41.902 [main] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
09:46:41.902 [main] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available
09:46:41.903 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
09:46:41.904 [main] DEBUG io.netty.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled
09:46:41.905 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true
09:46:41.906 [main] DEBUG io.netty.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @4f4c4b1a
09:46:41.907 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.<init>(long, int): unavailable
09:46:41.907 [main] DEBUG io.netty.util.internal.PlatformDependent - sun.misc.Unsafe: available
09:46:41.923 [main] DEBUG io.netty.util.internal.PlatformDependent - maxDirectMemory: 4273995776 bytes (maybe)
09:46:41.923 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\CC437236\AppData\Local\Temp (java.io.tmpdir)
09:46:41.923 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
09:46:41.924 [main] DEBUG io.netty.util.internal.PlatformDependent - Platform: Windows
09:46:41.925 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes
09:46:41.925 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1
09:46:41.926 [main] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available
09:46:41.926 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
09:46:41.967 [main] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
09:46:41.968 [main] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
09:46:42.027 [main] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple
09:46:42.027 [main] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4
Connected to Key Vault: https://nsn-dev-ecm-kva-001.vault.azure.net/
Listing secrets...
09:46:42.293 [main] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false
09:46:42.293 [main] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false
09:46:42.340 [main] DEBUG io.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
09:46:42.341 [main] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
09:46:42.360 [main] INFO com.azure.security.keyvault.secrets.SecretAsyncClient - Listing secrets
09:46:42.382 [main] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.workdir: C:\Users\CC437236\AppData\Local\Temp (io.netty.tmpdir)
09:46:42.382 [main] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.deleteLibAfterLoading: true
09:46:42.382 [main] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.tryPatchShadedId: true
09:46:42.382 [main] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.detectNativeLibraryDuplicates: true
09:46:42.812 [main] DEBUG io.netty.util.internal.NativeLibraryLoader - Successfully loaded the library C:\Users\CC437236\AppData\Local\Temp\netty_tcnative_windows_x86_6417648004260704169502.dll
09:46:42.814 [main] DEBUG io.netty.util.internal.NativeLibraryLoader - Loaded library with name 'netty_tcnative_windows_x86_64'
09:46:42.814 [main] DEBUG io.netty.handler.ssl.OpenSsl - Initialize netty-tcnative using engine: 'default'
09:46:42.814 [main] DEBUG io.netty.handler.ssl.OpenSsl - netty-tcnative using native library: BoringSSL
09:46:43.016 [main] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true
09:46:43.019 [main] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true
09:46:43.022 [main] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5bda80bf
09:46:43.044 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 8
09:46:43.044 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 8
09:46:43.044 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192
09:46:43.044 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 9
09:46:43.044 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 4194304
09:46:43.044 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256
09:46:43.044 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64
09:46:43.045 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
09:46:43.045 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192
09:46:43.045 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
09:46:43.045 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: false
09:46:43.045 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
09:46:43.064 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled
09:46:43.064 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0
09:46:43.064 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384
09:46:43.070 [main] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@15a902e7
09:46:43.084 [main] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096
09:46:43.084 [main] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8
09:46:43.084 [main] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.chunkSize: 32
09:46:43.084 [main] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.blocking: false
09:46:43.096 [main] DEBUG io.netty.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available
09:46:43.120 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 => ECDHE-ECDSA-AES128-GCM-SHA256
09:46:43.120 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 => ECDHE-ECDSA-AES128-GCM-SHA256
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 => ECDHE-RSA-AES128-GCM-SHA256
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_RSA_WITH_AES_128_GCM_SHA256 => ECDHE-RSA-AES128-GCM-SHA256
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 => ECDHE-ECDSA-AES256-GCM-SHA384
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 => ECDHE-ECDSA-AES256-GCM-SHA384
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 => ECDHE-RSA-AES256-GCM-SHA384
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_RSA_WITH_AES_256_GCM_SHA384 => ECDHE-RSA-AES256-GCM-SHA384
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-ECDSA-CHACHA20-POLY1305
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-ECDSA-CHACHA20-POLY1305
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-RSA-CHACHA20-POLY1305
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-RSA-CHACHA20-POLY1305
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-PSK-CHACHA20-POLY1305
09:46:43.121 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 => ECDHE-PSK-CHACHA20-POLY1305
09:46:43.122 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA => ECDHE-ECDSA-AES128-SHA
09:46:43.122 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_ECDSA_WITH_AES_128_CBC_SHA => ECDHE-ECDSA-AES128-SHA
09:46:43.122 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA => ECDHE-RSA-AES128-SHA
09:46:43.122 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_RSA_WITH_AES_128_CBC_SHA => ECDHE-RSA-AES128-SHA
09:46:43.122 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA => ECDHE-PSK-AES128-CBC-SHA
09:46:43.122 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_PSK_WITH_AES_128_CBC_SHA => ECDHE-PSK-AES128-CBC-SHA
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA => ECDHE-ECDSA-AES256-SHA
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_ECDSA_WITH_AES_256_CBC_SHA => ECDHE-ECDSA-AES256-SHA
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA => ECDHE-RSA-AES256-SHA
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_RSA_WITH_AES_256_CBC_SHA => ECDHE-RSA-AES256-SHA
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA => ECDHE-PSK-AES256-CBC-SHA
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_ECDHE_PSK_WITH_AES_256_CBC_SHA => ECDHE-PSK-AES256-CBC-SHA
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_RSA_WITH_AES_128_GCM_SHA256 => AES128-GCM-SHA256
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_RSA_WITH_AES_128_GCM_SHA256 => AES128-GCM-SHA256
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_RSA_WITH_AES_256_GCM_SHA384 => AES256-GCM-SHA384
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_RSA_WITH_AES_256_GCM_SHA384 => AES256-GCM-SHA384
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_RSA_WITH_AES_128_CBC_SHA => AES128-SHA
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_RSA_WITH_AES_128_CBC_SHA => AES128-SHA
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_PSK_WITH_AES_128_CBC_SHA => PSK-AES128-CBC-SHA
09:46:43.123 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_PSK_WITH_AES_128_CBC_SHA => PSK-AES128-CBC-SHA
09:46:43.124 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_RSA_WITH_AES_256_CBC_SHA => AES256-SHA
09:46:43.124 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_RSA_WITH_AES_256_CBC_SHA => AES256-SHA
09:46:43.124 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_PSK_WITH_AES_256_CBC_SHA => PSK-AES256-CBC-SHA
09:46:43.124 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_PSK_WITH_AES_256_CBC_SHA => PSK-AES256-CBC-SHA
09:46:43.124 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: TLS_RSA_WITH_3DES_EDE_CBC_SHA => DES-CBC3-SHA
09:46:43.124 [main] DEBUG io.netty.handler.ssl.CipherSuiteConverter - Cipher suite mapping: SSL_RSA_WITH_3DES_EDE_CBC_SHA => DES-CBC3-SHA
09:46:43.124 [main] DEBUG io.netty.handler.ssl.OpenSsl - Supported protocols (OpenSSL): [SSLv2Hello, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3] 
09:46:43.124 [main] DEBUG io.netty.handler.ssl.OpenSsl - Default cipher suites (OpenSSL): [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_CHACHA20_POLY1305_SHA256]
09:46:43.220 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=4, workerCount=4}
09:46:43.223 [main] DEBUG reactor.netty.tcp.TcpResources - [http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@3676ac27
09:46:43.229 [main] DEBUG reactor.netty.resources.DefaultLoopIOUring - Default io_uring support : false
09:46:43.282 [main] DEBUG reactor.netty.resources.DefaultLoopEpoll - Default Epoll support : false
09:46:43.286 [main] DEBUG reactor.netty.resources.DefaultLoopKQueue - Default KQueue support : false
09:46:43.293 [main] DEBUG io.netty.channel.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 8
09:46:43.350 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
09:46:43.350 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
09:46:43.441 [main] DEBUG io.netty.resolver.DefaultHostsFileEntriesResolver - -Dio.netty.hostsFileRefreshInterval: 0
09:46:43.605 [main] DEBUG io.netty.resolver.dns.DefaultDnsServerAddressStreamProvider - Default DNS servers: [/10.50.10.10:53, /10.50.3.10:53] (sun.net.dns.ResolverConfiguration)
09:46:43.615 [main] DEBUG reactor.netty.resources.PooledConnectionProvider - Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [nsn-dev-ecm-kva-001.vault.azure.net/<unresolved>:443]
09:46:43.704 [main] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 15668 (auto-detected)
09:46:43.719 [main] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 50:6b:8d:ff:fe:8c:7b:e6 (auto-detected)
09:46:43.772 [reactor-http-nio-2] DEBUG reactor.netty.resources.PooledConnectionProvider - [917c809d] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
09:46:43.791 [reactor-http-nio-2] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3b2553fb
09:46:43.816 [reactor-http-nio-2] DEBUG reactor.netty.tcp.SslProvider - [917c809d] SSL enabled using engine io.netty.handler.ssl.OpenSslEngine@707a80c0 and SNI nsn-dev-ecm-kva-001.vault.azure.net/<unresolved>:443
09:46:43.841 [reactor-http-nio-2] DEBUG reactor.netty.transport.TransportConfig - [917c809d] Initialized pipeline DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.sslReader = reactor.netty.tcp.SslProvider$SslReadHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
09:46:43.921 [reactor-http-nio-1] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5293c571
09:46:43.932 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xd9a0f6fd] WRITE: UDP, [55200: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN A)
09:46:43.985 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xd9a0f6fd] RECEIVED: UDP [55200: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:60016, 55200, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN A)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.vault.azure.net. 1800 IN CNAME 53B)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. 10 IN A 4B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:46:43.990 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xd9a0f6fd] WRITE: UDP, [40199: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:46:43.992 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xd9a0f6fd] RECEIVED: UDP [40199: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:60016, 40199, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. 10 IN A 4B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:46:43.996 [reactor-http-nio-2] DEBUG reactor.netty.transport.TransportConnector - [917c809d] Connecting to [nsn-dev-ecm-kva-001.vault.azure.net/10.245.74.104:443].
09:47:05.040 [reactor-http-nio-2] DEBUG reactor.netty.transport.TransportConnector - [917c809d] Connect attempt to [nsn-dev-ecm-kva-001.vault.azure.net/10.245.74.104:443] failed.
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection timed out: no further information: nsn-dev-ecm-kva-001.vault.azure.net/10.245.74.104:443
Caused by: java.net.ConnectException: Connection timed out: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
09:47:05.054 [reactor-http-nio-2] DEBUG com.azure.core.http.policy.RetryPolicy - [Error Resume] Try count: 0, Error: {}
io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection timed out: no further information: nsn-dev-ecm-kva-001.vault.azure.net/10.245.74.104:443
Caused by: java.net.ConnectException: Connection timed out: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:946)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:337)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:776)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
09:47:05.918 [reactor-http-nio-3] DEBUG reactor.netty.resources.PooledConnectionProvider - [d13f2f64] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
09:47:05.920 [reactor-http-nio-3] DEBUG reactor.netty.tcp.SslProvider - [d13f2f64] SSL enabled using engine io.netty.handler.ssl.OpenSslEngine@55f40a1a and SNI nsn-dev-ecm-kva-001.vault.azure.net/<unresolved>:443
09:47:05.921 [reactor-http-nio-3] DEBUG reactor.netty.transport.TransportConfig - [d13f2f64] Initialized pipeline DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.sslReader = reactor.netty.tcp.SslProvider$SslReadHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
09:47:05.924 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x4166e766] WRITE: UDP, [29020: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN A)
09:47:05.965 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x4166e766] RECEIVED: UDP [29020: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63921, 29020, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN A)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.vault.azure.net. 1778 IN CNAME 53B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:05.966 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x4166e766] WRITE: UDP, [12172: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:05.967 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x4166e766] RECEIVED: UDP [12172: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63921, 12172, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 10 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:05.968 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x4166e766] WRITE: UDP, [996: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:05.994 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x4166e766] RECEIVED: UDP [996: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63921, 996, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 10 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:05.994 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x4166e766] WRITE: UDP, [23388: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
09:47:05.998 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x4166e766] RECEIVED: UDP [23388: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63921, 23388, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.vault.azure.net. 1778 IN CNAME 53B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:05.999 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x4166e766] WRITE: UDP, [387: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:06.001 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x4166e766] RECEIVED: UDP [387: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63921, 387, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 10 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:06.002 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x4166e766] WRITE: UDP, [49325: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:06.003 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x4166e766] RECEIVED: UDP [49325: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63921, 49325, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 10 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:06.005 [reactor-http-nio-1] DEBUG com.azure.core.http.policy.RetryPolicy - [Error Resume] Try count: 1, Error: {}
java.net.UnknownHostException: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 6 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1047)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1000)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:418)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:629)
	at io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:66)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:462)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:232)
	at io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:224)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1314)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
09:47:07.617 [reactor-http-nio-4] DEBUG reactor.netty.resources.PooledConnectionProvider - [8bf908c6] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
09:47:07.618 [reactor-http-nio-4] DEBUG reactor.netty.tcp.SslProvider - [8bf908c6] SSL enabled using engine io.netty.handler.ssl.OpenSslEngine@2b6dcbb2 and SNI nsn-dev-ecm-kva-001.vault.azure.net/<unresolved>:443
09:47:07.618 [reactor-http-nio-4] DEBUG reactor.netty.transport.TransportConfig - [8bf908c6] Initialized pipeline DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.sslReader = reactor.netty.tcp.SslProvider$SslReadHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
09:47:07.620 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x5bc0afd9] WRITE: UDP, [24762: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN A)
09:47:07.623 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x5bc0afd9] RECEIVED: UDP [24762: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63922, 24762, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN A)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.vault.azure.net. 1777 IN CNAME 53B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:07.623 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x5bc0afd9] WRITE: UDP, [48363: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:07.624 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x5bc0afd9] RECEIVED: UDP [48363: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63922, 48363, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 9 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:07.625 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x5bc0afd9] WRITE: UDP, [16948: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:07.631 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x5bc0afd9] RECEIVED: UDP [16948: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63922, 16948, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 8 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:07.631 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x5bc0afd9] WRITE: UDP, [61093: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
09:47:07.643 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x5bc0afd9] RECEIVED: UDP [61093: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63922, 61093, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.vault.azure.net. 1777 IN CNAME 53B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:07.644 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x5bc0afd9] WRITE: UDP, [14473: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:07.645 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x5bc0afd9] RECEIVED: UDP [14473: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63922, 14473, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 8 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:07.645 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x5bc0afd9] WRITE: UDP, [26563: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:07.656 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x5bc0afd9] RECEIVED: UDP [26563: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63922, 26563, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 8 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:07.656 [reactor-http-nio-1] DEBUG com.azure.core.http.policy.RetryPolicy - [Error Resume] Try count: 2, Error: {}
java.net.UnknownHostException: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 6 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1047)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1000)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:418)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:629)
	at io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:66)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:462)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:232)
	at io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:224)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1314)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
09:47:10.977 [reactor-http-nio-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [b6ce35ed] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
09:47:10.978 [reactor-http-nio-1] DEBUG reactor.netty.tcp.SslProvider - [b6ce35ed] SSL enabled using engine io.netty.handler.ssl.OpenSslEngine@16ca7dcf and SNI nsn-dev-ecm-kva-001.vault.azure.net/<unresolved>:443
09:47:10.979 [reactor-http-nio-1] DEBUG reactor.netty.transport.TransportConfig - [b6ce35ed] Initialized pipeline DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.sslReader = reactor.netty.tcp.SslProvider$SslReadHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
09:47:10.981 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xf23ea124] WRITE: UDP, [16385: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN A)
09:47:10.983 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xf23ea124] RECEIVED: UDP [16385: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63923, 16385, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN A)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.vault.azure.net. 1773 IN CNAME 53B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:10.983 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xf23ea124] WRITE: UDP, [65081: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:10.985 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xf23ea124] RECEIVED: UDP [65081: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63923, 65081, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 5 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:10.985 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xf23ea124] WRITE: UDP, [8361: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:10.988 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xf23ea124] RECEIVED: UDP [8361: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63923, 8361, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 5 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:10.989 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xf23ea124] WRITE: UDP, [31491: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
09:47:10.990 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xf23ea124] RECEIVED: UDP [31491: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63923, 31491, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.vault.azure.net. 1773 IN CNAME 53B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:10.991 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xf23ea124] WRITE: UDP, [40584: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:10.997 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xf23ea124] RECEIVED: UDP [40584: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63923, 40584, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 5 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:10.997 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xf23ea124] WRITE: UDP, [10402: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:11.000 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xf23ea124] RECEIVED: UDP [10402: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63923, 10402, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 5 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:11.001 [reactor-http-nio-1] WARN com.azure.security.keyvault.secrets.SecretAsyncClient - Failed to list secrets
Max retries 3 times exceeded. Error Details: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 6 queries 
java.lang.RuntimeException: Max retries 3 times exceeded. Error Details: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 6 queries 
	at com.azure.core.http.policy.RetryPolicy.lambda$attemptAsync$1(RetryPolicy.java:127)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:602)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1680)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
	at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
	at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:429)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:550)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4444)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:582)
	at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:389)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:109)
	at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1055)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1000)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:418)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:629)
	at io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:66)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:462)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:232)
	at io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:224)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1314)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.net.UnknownHostException: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 6 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1047)
	... 35 common frames omitted
❌ Failed to list secrets: Max retries 3 times exceeded. Error Details: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 6 queries 
java.lang.RuntimeException: Max retries 3 times exceeded. Error Details: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 6 queries 
	at com.azure.core.http.policy.RetryPolicy.lambda$attemptAsync$1(RetryPolicy.java:127)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:602)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1680)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
	at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
	at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:429)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:550)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4444)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:582)
	at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:389)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:109)
	at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1055)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1000)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:418)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:629)
	at io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:66)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:462)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:232)
	at io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:224)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1314)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:99)
		at reactor.core.publisher.Flux.blockLast(Flux.java:2746)
		at com.azure.core.util.paging.ContinuablePagedByIteratorBase.requestPage(ContinuablePagedByIteratorBase.java:94)
		at com.azure.core.util.paging.ContinuablePagedByItemIterable$ContinuablePagedByItemIterator.<init>(ContinuablePagedByItemIterable.java:50)
		at com.azure.core.util.paging.ContinuablePagedByItemIterable.iterator(ContinuablePagedByItemIterable.java:37)
		at com.azure.core.util.paging.ContinuablePagedIterable.iterator(ContinuablePagedIterable.java:106)
		at com.nedbank.kafka.filemanage.service.BlobStorageFromKeyVault.main(BlobStorageFromKeyVault.java:33)
Caused by: java.net.UnknownHostException: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 6 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1047)
	... 35 more
09:47:11.033 [main] INFO com.azure.security.keyvault.secrets.SecretAsyncClient - Retrieving secret - blob-storage-account-name
09:47:11.034 [reactor-http-nio-2] DEBUG reactor.netty.resources.PooledConnectionProvider - [20534e80] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
09:47:11.034 [reactor-http-nio-2] DEBUG reactor.netty.tcp.SslProvider - [20534e80] SSL enabled using engine io.netty.handler.ssl.OpenSslEngine@757be661 and SNI nsn-dev-ecm-kva-001.vault.azure.net/<unresolved>:443
09:47:11.035 [reactor-http-nio-2] DEBUG reactor.netty.transport.TransportConfig - [20534e80] Initialized pipeline DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.sslReader = reactor.netty.tcp.SslProvider$SslReadHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
09:47:11.036 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xd9a0f6fd] WRITE: UDP, [24268: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:11.038 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xd9a0f6fd] RECEIVED: UDP [24268: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:60016, 24268, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 5 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:11.038 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xd9a0f6fd] WRITE: UDP, [41304: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:11.048 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xd9a0f6fd] RECEIVED: UDP [41304: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:60016, 41304, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 5 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:11.048 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xd9a0f6fd] WRITE: UDP, [58553: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
09:47:11.053 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xd9a0f6fd] RECEIVED: UDP [58553: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:60016, 58553, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.vault.azure.net. 1773 IN CNAME 53B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:11.053 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xd9a0f6fd] WRITE: UDP, [7121: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:11.054 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xd9a0f6fd] RECEIVED: UDP [7121: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:60016, 7121, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 5 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:11.055 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xd9a0f6fd] WRITE: UDP, [22609: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:11.065 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xd9a0f6fd] RECEIVED: UDP [22609: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:60016, 22609, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 5 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:11.065 [reactor-http-nio-1] DEBUG com.azure.core.http.policy.RetryPolicy - [Error Resume] Try count: 0, Error: {}
java.net.UnknownHostException: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 5 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1047)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1000)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:418)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:629)
	at io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:66)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:462)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:232)
	at io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:224)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1314)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
09:47:11.877 [reactor-http-nio-3] DEBUG reactor.netty.resources.PooledConnectionProvider - [0ad1381d] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
09:47:11.877 [reactor-http-nio-3] DEBUG reactor.netty.tcp.SslProvider - [0ad1381d] SSL enabled using engine io.netty.handler.ssl.OpenSslEngine@35dbf555 and SNI nsn-dev-ecm-kva-001.vault.azure.net/<unresolved>:443
09:47:11.878 [reactor-http-nio-3] DEBUG reactor.netty.transport.TransportConfig - [0ad1381d] Initialized pipeline DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.sslReader = reactor.netty.tcp.SslProvider$SslReadHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
09:47:11.878 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x4166e766] WRITE: UDP, [35332: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:11.880 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x4166e766] RECEIVED: UDP [35332: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63921, 35332, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 4 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:11.880 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x4166e766] WRITE: UDP, [29749: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:11.886 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x4166e766] RECEIVED: UDP [29749: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63921, 29749, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 4 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:11.887 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x4166e766] WRITE: UDP, [55583: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
09:47:11.892 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x4166e766] RECEIVED: UDP [55583: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63921, 55583, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.vault.azure.net. 1772 IN CNAME 53B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:11.893 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x4166e766] WRITE: UDP, [2442: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:11.894 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x4166e766] RECEIVED: UDP [2442: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63921, 2442, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 4 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:11.894 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x4166e766] WRITE: UDP, [37215: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:11.899 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x4166e766] RECEIVED: UDP [37215: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63921, 37215, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 4 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:11.899 [reactor-http-nio-1] DEBUG com.azure.core.http.policy.RetryPolicy - [Error Resume] Try count: 1, Error: {}
java.net.UnknownHostException: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 5 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1047)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1000)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:418)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:629)
	at io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:66)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:462)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:232)
	at io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:224)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1314)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
09:47:13.544 [reactor-http-nio-4] DEBUG reactor.netty.resources.PooledConnectionProvider - [b0b95062] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
09:47:13.545 [reactor-http-nio-4] DEBUG reactor.netty.tcp.SslProvider - [b0b95062] SSL enabled using engine io.netty.handler.ssl.OpenSslEngine@4b4234fd and SNI nsn-dev-ecm-kva-001.vault.azure.net/<unresolved>:443
09:47:13.545 [reactor-http-nio-4] DEBUG reactor.netty.transport.TransportConfig - [b0b95062] Initialized pipeline DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.sslReader = reactor.netty.tcp.SslProvider$SslReadHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
09:47:13.546 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x5bc0afd9] WRITE: UDP, [41409: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:13.549 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x5bc0afd9] RECEIVED: UDP [41409: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63922, 41409, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 3 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:13.549 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x5bc0afd9] WRITE: UDP, [25040: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:13.552 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x5bc0afd9] RECEIVED: UDP [25040: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63922, 25040, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 2 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:13.552 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x5bc0afd9] WRITE: UDP, [5864: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
09:47:13.554 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x5bc0afd9] RECEIVED: UDP [5864: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63922, 5864, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.vault.azure.net. 1771 IN CNAME 53B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:13.554 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x5bc0afd9] WRITE: UDP, [45525: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:13.556 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x5bc0afd9] RECEIVED: UDP [45525: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63922, 45525, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 3 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:13.556 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0x5bc0afd9] WRITE: UDP, [17376: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:13.559 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0x5bc0afd9] RECEIVED: UDP [17376: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63922, 17376, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 2 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:13.560 [reactor-http-nio-1] DEBUG com.azure.core.http.policy.RetryPolicy - [Error Resume] Try count: 2, Error: {}
java.net.UnknownHostException: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 5 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1047)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1000)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:418)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:629)
	at io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:66)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:462)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:232)
	at io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:224)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1314)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
09:47:16.683 [reactor-http-nio-1] DEBUG reactor.netty.resources.PooledConnectionProvider - [11caf076] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.
09:47:16.683 [reactor-http-nio-1] DEBUG reactor.netty.tcp.SslProvider - [11caf076] SSL enabled using engine io.netty.handler.ssl.OpenSslEngine@6e9342c3 and SNI nsn-dev-ecm-kva-001.vault.azure.net/<unresolved>:443
09:47:16.684 [reactor-http-nio-1] DEBUG reactor.netty.transport.TransportConfig - [11caf076] Initialized pipeline DefaultChannelPipeline{(reactor.left.sslHandler = io.netty.handler.ssl.SslHandler), (reactor.left.sslReader = reactor.netty.tcp.SslProvider$SslReadHandler), (reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}
09:47:16.684 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xf23ea124] WRITE: UDP, [11723: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:16.721 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xf23ea124] RECEIVED: UDP [11723: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63923, 11723, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 10 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:16.722 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xf23ea124] WRITE: UDP, [32929: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
09:47:16.753 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xf23ea124] RECEIVED: UDP [32929: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63923, 32929, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN A)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 10 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:16.753 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xf23ea124] WRITE: UDP, [56989: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
09:47:16.755 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xf23ea124] RECEIVED: UDP [56989: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63923, 56989, QUERY(0), NoError(0), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.vault.azure.net. IN CNAME)
	DefaultDnsRawRecord(nsn-dev-ecm-kva-001.vault.azure.net. 1767 IN CNAME 53B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:16.755 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xf23ea124] WRITE: UDP, [49538: /10.50.10.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:16.756 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xf23ea124] RECEIVED: UDP [49538: /10.50.10.10:53], DatagramDnsResponse(from: /10.50.10.10:53, to: /[0:0:0:0:0:0:0:0]:63923, 49538, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 10 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:16.757 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsQueryContext - [id: 0xf23ea124] WRITE: UDP, [49800: /10.50.3.10:53], DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
09:47:16.758 [reactor-http-nio-1] DEBUG io.netty.resolver.dns.DnsNameResolver - [id: 0xf23ea124] RECEIVED: UDP [49800: /10.50.3.10:53], DatagramDnsResponse(from: /10.50.3.10:53, to: /[0:0:0:0:0:0:0:0]:63923, 49800, QUERY(0), NXDomain(3), RD RA)
	DefaultDnsQuestion(nsn-dev-ecm-kva-001.privatelink.vaultcore.azure.net. IN CNAME)
	DefaultDnsRawRecord(privatelink.vaultcore.azure.net. 10 IN SOA 74B)
	DefaultDnsRawRecord(OPT flags:0 udp:4000 0B)
09:47:16.759 [reactor-http-nio-1] WARN com.azure.security.keyvault.secrets.SecretAsyncClient - Failed to get secret - blob-storage-account-name
Max retries 3 times exceeded. Error Details: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 5 queries 
java.lang.RuntimeException: Max retries 3 times exceeded. Error Details: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 5 queries 
	at com.azure.core.http.policy.RetryPolicy.lambda$attemptAsync$1(RetryPolicy.java:127)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:602)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1680)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
	at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
	at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:429)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:550)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4444)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:582)
	at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:389)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:109)
	at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1055)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1000)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:418)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:629)
	at io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:66)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:462)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:232)
	at io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:224)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1314)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.net.UnknownHostException: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 5 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1047)
	... 35 common frames omitted
Exception in thread "main" java.lang.RuntimeException: Max retries 3 times exceeded. Error Details: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 5 queries 
	at com.azure.core.http.policy.RetryPolicy.lambda$attemptAsync$1(RetryPolicy.java:127)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:94)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:180)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.MonoSingle$SingleSubscriber.onError(MonoSingle.java:150)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:326)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:211)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:471)
	at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:615)
	at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:602)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:336)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
	at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1680)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:192)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
	at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
	at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:429)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:550)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:241)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:315)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4444)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:582)
	at reactor.netty.transport.TransportConnector.lambda$doResolveAndConnect$11(TransportConnector.java:389)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:109)
	at io.netty.resolver.InetSocketAddressResolver$2.operationComplete(InetSocketAddressResolver.java:86)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1055)
	at io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:1000)
	at io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:418)
	at io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:629)
	at io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:66)
	at io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:462)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:232)
	at io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:224)
	at io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1314)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:99)
		at reactor.core.publisher.Mono.block(Mono.java:1710)
		at com.azure.security.keyvault.secrets.SecretClient.getSecretWithResponse(SecretClient.java:171)
		at com.azure.security.keyvault.secrets.SecretClient.getSecret(SecretClient.java:150)
		at com.nedbank.kafka.filemanage.service.BlobStorageFromKeyVault.main(BlobStorageFromKeyVault.java:44)
Caused by: java.net.UnknownHostException: Failed to resolve 'nsn-dev-ecm-kva-001.vault.azure.net' after 5 queries 
	at io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1047)
	... 35 more

Process finished with exit code 1
